name: Release Package

on:
  push:
    tags:
      - 'v*'  # Triggers on tags like v1.0.0, v1.2.3, etc.

jobs:
  build-and-publish:
    name: Build and Publish NuGet Package
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET 9.0.x
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Extract version from tag
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"

    - name: Restore dependencies
      run: dotnet restore

    - name: Build (Release)
      run: dotnet build -c Release --no-restore

    - name: Run tests
      run: dotnet test -c Release --no-build --verbosity normal
      timeout-minutes: 5

    - name: Pack NuGet package
      run: dotnet pack src/Rivulet.Core/Rivulet.Core.csproj -c Release --output ./artifacts -p:PackageVersion=${{ steps.get_version.outputs.version }}

    - name: List artifacts
      run: ls -la ./artifacts

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: ./artifacts/Rivulet.Core.*.nupkg
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(steps.get_version.outputs.version, '-') }}  # Mark as prerelease if version contains '-' (e.g., 1.0.0-beta)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifacts to workflow
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package-${{ steps.get_version.outputs.version }}
        path: ./artifacts/Rivulet.Core.*.nupkg
        retention-days: 90

    - name: Publish to NuGet.org
      run: dotnet nuget push ./artifacts/Rivulet.Core.*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
