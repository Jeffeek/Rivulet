name: CI - Build and Test

on:
  pull_request:
    branches:
      - "master"
      - "release/**"
  push:
    branches:
      - "master"
      - "release/**"

permissions:
  contents: read

jobs:
  quick-test:
    name: Quick Test (${{ matrix.os }}, .NET ${{ matrix.dotnet }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        dotnet: ['8.0.x', '9.0.x']
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Setup .NET ${{ matrix.dotnet }}
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: ${{ matrix.dotnet }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build (Release)
      run: dotnet build -c Release --no-restore

    - name: Run tests (single iteration)
      run: dotnet test -c Release --no-build --verbosity normal
      timeout-minutes: 5

  test-with-coverage:
    name: Test with Coverage (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: quick-test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Setup .NET 9.0.x
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: 9.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build (Release)
      run: dotnet build -c Release --no-restore

    - name: Run tests with coverage
      run: dotnet test -c Release --no-build --collect:"XPlat Code Coverage" --results-directory ./coverage
      timeout-minutes: 5

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      if: matrix.os == 'ubuntu-latest'
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage
        fail_ci_if_error: false
        verbose: true
